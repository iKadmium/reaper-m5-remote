// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
	"name": "Arduino m5",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	// "image": "mcr.microsoft.com/devcontainers/rust:bookworm",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {}
	},
	//"image": "docker.io/micropython/unix",
	// Use 'mounts' to make the cargo cache persistent in a Docker Volume.
	// "mounts": [
	// 	{
	// 		"source": "devcontainer-cargo-cache-${devcontainerId}",
	// 		"target": "/usr/local/cargo",
	// 		"type": "volume"
	// 	}
	// ]
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {},
	// Use 'forwardPorts' to make a list of ports inside the contaciner available locally.
	// "forwardPorts": [],
	// Share M5Stack USB device and enable Wayland/GPU access
	"runArgs": [
		"--device=/dev/ttyACM0",
		"--userns=keep-id",
		"--group-add",
		"18",
		// GPU access for Wayland
		"--device=/dev/dri",
		// Add render group for GPU access
		"--group-add",
		"render"
	],
	"mounts": [
		// Wayland socket
		"source=${localEnv:XDG_RUNTIME_DIR}/${localEnv:WAYLAND_DISPLAY},target=/run/user/1000/${localEnv:WAYLAND_DISPLAY},type=bind"
	],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "echo 'source /home/vscode/platformio-venv/bin/activate' >> ~/.bashrc",
	// Environment variables for Wayland
	"containerEnv": {
		"WAYLAND_DISPLAY": "${localEnv:WAYLAND_DISPLAY}",
		"XDG_RUNTIME_DIR": "/run/user/1000"
	},
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vscode",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-vscode.cmake-tools",
				"ms-vscode.cpptools",
				"platformio.platformio-ide"
			]
		}
	}
}